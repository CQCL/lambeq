/*
! tailwindcss v3.4.4 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

.use-tailwind *,
.use-tailwind ::before,
.use-tailwind ::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

.use-tailwind ::before,
.use-tailwind ::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

.use-tailwind html,
.use-tailwind :host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

.use-tailwind body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

.use-tailwind hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

.use-tailwind abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

.use-tailwind h1,
.use-tailwind h2,
.use-tailwind h3,
.use-tailwind h4,
.use-tailwind h5,
.use-tailwind h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

.use-tailwind a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

.use-tailwind b,
.use-tailwind strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

.use-tailwind code,
.use-tailwind kbd,
.use-tailwind samp,
.use-tailwind pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

.use-tailwind small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

.use-tailwind sub,
.use-tailwind sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

.use-tailwind sub {
  bottom: -0.25em;
}

.use-tailwind sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

.use-tailwind table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

.use-tailwind button,
.use-tailwind input,
.use-tailwind optgroup,
.use-tailwind select,
.use-tailwind textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

.use-tailwind button,
.use-tailwind select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

.use-tailwind button,
.use-tailwind input:where([type='button']),
.use-tailwind input:where([type='reset']),
.use-tailwind input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

.use-tailwind :-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

.use-tailwind :-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

.use-tailwind progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

.use-tailwind ::-webkit-inner-spin-button,
.use-tailwind ::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

.use-tailwind [type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

.use-tailwind ::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

.use-tailwind ::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

.use-tailwind summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

.use-tailwind blockquote,
.use-tailwind dl,
.use-tailwind dd,
.use-tailwind h1,
.use-tailwind h2,
.use-tailwind h3,
.use-tailwind h4,
.use-tailwind h5,
.use-tailwind h6,
.use-tailwind hr,
.use-tailwind figure,
.use-tailwind p,
.use-tailwind pre {
  margin: 0;
}

.use-tailwind fieldset {
  margin: 0;
  padding: 0;
}

.use-tailwind legend {
  padding: 0;
}

.use-tailwind ol,
.use-tailwind ul,
.use-tailwind menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

.use-tailwind dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

.use-tailwind textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

.use-tailwind input::-moz-placeholder, .use-tailwind textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

.use-tailwind input::placeholder,
.use-tailwind textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

.use-tailwind button,
.use-tailwind [role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

.use-tailwind :disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

.use-tailwind img,
.use-tailwind svg,
.use-tailwind video,
.use-tailwind canvas,
.use-tailwind audio,
.use-tailwind iframe,
.use-tailwind embed,
.use-tailwind object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

.use-tailwind img,
.use-tailwind video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

.use-tailwind [hidden] {
  display: none;
}

.use-tailwind * {
  border-color: hsl(var(--border));
}

.use-tailwind body {
  background-color: hsl(var(--background));
  font-size: 0.875rem;
  line-height: 1.25rem;
  color: hsl(var(--foreground));
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.use-tailwind *, .use-tailwind ::before, .use-tailwind ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

.use-tailwind ::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

.use-tailwind .container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: 2rem;
  padding-left: 2rem;
}

@media (min-width: 1400px) {
  .use-tailwind .container {
    max-width: 1400px;
  }
}

.use-tailwind .sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.use-tailwind .pointer-events-none {
  pointer-events: none;
}

.use-tailwind .pointer-events-auto {
  pointer-events: auto;
}

.use-tailwind .visible {
  visibility: visible;
}

.use-tailwind .invisible {
  visibility: hidden;
}

.use-tailwind .fixed {
  position: fixed;
}

.use-tailwind .absolute {
  position: absolute;
}

.use-tailwind .relative {
  position: relative;
}

.use-tailwind .sticky {
  position: sticky;
}

.use-tailwind .inset-0 {
  inset: 0px;
}

.use-tailwind .inset-x-0 {
  left: 0px;
  right: 0px;
}

.use-tailwind .inset-y-0 {
  top: 0px;
  bottom: 0px;
}

.use-tailwind .bottom-0 {
  bottom: 0px;
}

.use-tailwind .left-0 {
  left: 0px;
}

.use-tailwind .left-1 {
  left: 0.25rem;
}

.use-tailwind .left-2 {
  left: 0.5rem;
}

.use-tailwind .left-\[50\%\] {
  left: 50%;
}

.use-tailwind .right-0 {
  right: 0px;
}

.use-tailwind .right-1 {
  right: 0.25rem;
}

.use-tailwind .right-2 {
  right: 0.5rem;
}

.use-tailwind .right-4 {
  right: 1rem;
}

.use-tailwind .top-0 {
  top: 0px;
}

.use-tailwind .top-1 {
  top: 0.25rem;
}

.use-tailwind .top-4 {
  top: 1rem;
}

.use-tailwind .top-\[1px\] {
  top: 1px;
}

.use-tailwind .top-\[50\%\] {
  top: 50%;
}

.use-tailwind .top-\[60\%\] {
  top: 60%;
}

.use-tailwind .top-full {
  top: 100%;
}

.use-tailwind .z-10 {
  z-index: 10;
}

.use-tailwind .z-50 {
  z-index: 50;
}

.use-tailwind .z-\[100\] {
  z-index: 100;
}

.use-tailwind .z-\[1\] {
  z-index: 1;
}

.use-tailwind .-mx-1 {
  margin-left: -0.25rem;
  margin-right: -0.25rem;
}

.use-tailwind .mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.use-tailwind .mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.use-tailwind .my-1 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}

.use-tailwind .mb-1 {
  margin-bottom: 0.25rem;
}

.use-tailwind .ml-1 {
  margin-left: 0.25rem;
}

.use-tailwind .ml-2 {
  margin-left: 0.5rem;
}

.use-tailwind .ml-4 {
  margin-left: 1rem;
}

.use-tailwind .ml-auto {
  margin-left: auto;
}

.use-tailwind .mr-2 {
  margin-right: 0.5rem;
}

.use-tailwind .mr-3 {
  margin-right: 0.75rem;
}

.use-tailwind .mr-4 {
  margin-right: 1rem;
}

.use-tailwind .mt-1 {
  margin-top: 0.25rem;
}

.use-tailwind .mt-1\.5 {
  margin-top: 0.375rem;
}

.use-tailwind .mt-2 {
  margin-top: 0.5rem;
}

.use-tailwind .mt-24 {
  margin-top: 6rem;
}

.use-tailwind .mt-4 {
  margin-top: 1rem;
}

.use-tailwind .mt-auto {
  margin-top: auto;
}

.use-tailwind .line-clamp-1 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
}

.use-tailwind .line-clamp-2 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}

.use-tailwind .block {
  display: block;
}

.use-tailwind .flex {
  display: flex;
}

.use-tailwind .inline-flex {
  display: inline-flex;
}

.use-tailwind .table {
  display: table;
}

.use-tailwind .grid {
  display: grid;
}

.use-tailwind .hidden {
  display: none;
}

.use-tailwind .aspect-square {
  aspect-ratio: 1 / 1;
}

.use-tailwind .h-1 {
  height: 0.25rem;
}

.use-tailwind .h-1\.5 {
  height: 0.375rem;
}

.use-tailwind .h-10 {
  height: 2.5rem;
}

.use-tailwind .h-14 {
  height: 3.5rem;
}

.use-tailwind .h-2 {
  height: 0.5rem;
}

.use-tailwind .h-2\.5 {
  height: 0.625rem;
}

.use-tailwind .h-3 {
  height: 0.75rem;
}

.use-tailwind .h-3\.5 {
  height: 0.875rem;
}

.use-tailwind .h-4 {
  height: 1rem;
}

.use-tailwind .h-5 {
  height: 1.25rem;
}

.use-tailwind .h-6 {
  height: 1.5rem;
}

.use-tailwind .h-7 {
  height: 1.75rem;
}

.use-tailwind .h-8 {
  height: 2rem;
}

.use-tailwind .h-9 {
  height: 2.25rem;
}

.use-tailwind .h-\[1\.15rem\] {
  height: 1.15rem;
}

.use-tailwind .h-\[1px\] {
  height: 1px;
}

.use-tailwind .h-\[var\(--radix-navigation-menu-viewport-height\)\] {
  height: var(--radix-navigation-menu-viewport-height);
}

.use-tailwind .h-\[var\(--radix-select-trigger-height\)\] {
  height: var(--radix-select-trigger-height);
}

.use-tailwind .h-auto {
  height: auto;
}

.use-tailwind .h-full {
  height: 100%;
}

.use-tailwind .h-px {
  height: 1px;
}

.use-tailwind .max-h-6 {
  max-height: 1.5rem;
}

.use-tailwind .max-h-96 {
  max-height: 24rem;
}

.use-tailwind .max-h-\[300px\] {
  max-height: 300px;
}

.use-tailwind .max-h-\[unset\] {
  max-height: unset;
}

.use-tailwind .max-h-screen {
  max-height: 100vh;
}

.use-tailwind .min-h-6 {
  min-height: 1.5rem;
}

.use-tailwind .min-h-9 {
  min-height: 2.25rem;
}

.use-tailwind .min-h-\[60px\] {
  min-height: 60px;
}

.use-tailwind .w-10 {
  width: 2.5rem;
}

.use-tailwind .w-2 {
  width: 0.5rem;
}

.use-tailwind .w-2\.5 {
  width: 0.625rem;
}

.use-tailwind .w-3 {
  width: 0.75rem;
}

.use-tailwind .w-3\.5 {
  width: 0.875rem;
}

.use-tailwind .w-3\/4 {
  width: 75%;
}

.use-tailwind .w-4 {
  width: 1rem;
}

.use-tailwind .w-6 {
  width: 1.5rem;
}

.use-tailwind .w-64 {
  width: 16rem;
}

.use-tailwind .w-7 {
  width: 1.75rem;
}

.use-tailwind .w-72 {
  width: 18rem;
}

.use-tailwind .w-8 {
  width: 2rem;
}

.use-tailwind .w-9 {
  width: 2.25rem;
}

.use-tailwind .w-\[1\.15rem\] {
  width: 1.15rem;
}

.use-tailwind .w-\[100px\] {
  width: 100px;
}

.use-tailwind .w-\[1px\] {
  width: 1px;
}

.use-tailwind .w-full {
  width: 100%;
}

.use-tailwind .w-max {
  width: -moz-max-content;
  width: max-content;
}

.use-tailwind .w-px {
  width: 1px;
}

.use-tailwind .min-w-6 {
  min-width: 1.5rem;
}

.use-tailwind .min-w-\[12rem\] {
  min-width: 12rem;
}

.use-tailwind .min-w-\[8rem\] {
  min-width: 8rem;
}

.use-tailwind .min-w-\[var\(--radix-select-trigger-width\)\] {
  min-width: var(--radix-select-trigger-width);
}

.use-tailwind .max-w-6 {
  max-width: 1.5rem;
}

.use-tailwind .max-w-\[90rem\] {
  max-width: 90rem;
}

.use-tailwind .max-w-lg {
  max-width: 32rem;
}

.use-tailwind .max-w-max {
  max-width: -moz-max-content;
  max-width: max-content;
}

.use-tailwind .max-w-sm {
  max-width: 24rem;
}

.use-tailwind .flex-1 {
  flex: 1 1 0%;
}

.use-tailwind .flex-shrink-0 {
  flex-shrink: 0;
}

.use-tailwind .shrink-0 {
  flex-shrink: 0;
}

.use-tailwind .grow {
  flex-grow: 1;
}

.use-tailwind .caption-bottom {
  caption-side: bottom;
}

.use-tailwind .border-collapse {
  border-collapse: collapse;
}

.use-tailwind .-translate-y-1 {
  --tw-translate-y: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .translate-x-\[-50\%\] {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .translate-y-\[-50\%\] {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .rotate-0 {
  --tw-rotate: 0deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .rotate-45 {
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .rotate-90 {
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .scale-0 {
  --tw-scale-x: 0;
  --tw-scale-y: 0;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .scale-100 {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}

.use-tailwind .animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes slide-up {
  from {
    opacity: 0;
    transform: translateY(50%);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.use-tailwind .animate-slide-up {
  animation: slide-up 0.6s ease-in;
}

.use-tailwind .cursor-default {
  cursor: default;
}

.use-tailwind .cursor-not-allowed {
  cursor: not-allowed;
}

.use-tailwind .cursor-pointer {
  cursor: pointer;
}

.use-tailwind .cursor-text {
  cursor: text;
}

.use-tailwind .touch-none {
  touch-action: none;
}

.use-tailwind .select-none {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.use-tailwind .list-none {
  list-style-type: none;
}

.use-tailwind .flex-row {
  flex-direction: row;
}

.use-tailwind .flex-col {
  flex-direction: column;
}

.use-tailwind .flex-col-reverse {
  flex-direction: column-reverse;
}

.use-tailwind .flex-wrap {
  flex-wrap: wrap;
}

.use-tailwind .items-end {
  align-items: flex-end;
}

.use-tailwind .items-center {
  align-items: center;
}

.use-tailwind .justify-center {
  justify-content: center;
}

.use-tailwind .justify-between {
  justify-content: space-between;
}

.use-tailwind .gap-1 {
  gap: 0.25rem;
}

.use-tailwind .gap-1\.5 {
  gap: 0.375rem;
}

.use-tailwind .gap-2 {
  gap: 0.5rem;
}

.use-tailwind .gap-4 {
  gap: 1rem;
}

.use-tailwind .space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}

.use-tailwind .space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.use-tailwind .space-y-0 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0px * var(--tw-space-y-reverse));
}

.use-tailwind .space-y-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}

.use-tailwind .space-y-1\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.375rem * var(--tw-space-y-reverse));
}

.use-tailwind .space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

.use-tailwind .space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.use-tailwind .place-self-center {
  place-self: center;
}

.use-tailwind .overflow-auto {
  overflow: auto;
}

.use-tailwind .overflow-hidden {
  overflow: hidden;
}

.use-tailwind .overflow-y-auto {
  overflow-y: auto;
}

.use-tailwind .overflow-x-hidden {
  overflow-x: hidden;
}

.use-tailwind .text-ellipsis {
  text-overflow: ellipsis;
}

.use-tailwind .whitespace-nowrap {
  white-space: nowrap;
}

.use-tailwind .break-words {
  overflow-wrap: break-word;
}

.use-tailwind .rounded {
  border-radius: 0.25rem;
}

.use-tailwind .rounded-\[inherit\] {
  border-radius: inherit;
}

.use-tailwind .rounded-full {
  border-radius: 9999px;
}

.use-tailwind .rounded-lg {
  border-radius: var(--radius);
}

.use-tailwind .rounded-md {
  border-radius: calc(var(--radius) - 2px);
}

.use-tailwind .rounded-sm {
  border-radius: calc(var(--radius) - 4px);
}

.use-tailwind .rounded-xl {
  border-radius: calc(var(--radius) + 4px);
}

.use-tailwind .rounded-t-\[10px\] {
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
}

.use-tailwind .rounded-tl-sm {
  border-top-left-radius: calc(var(--radius) - 4px);
}

.use-tailwind .border {
  border-width: 1px;
}

.use-tailwind .border-2 {
  border-width: 2px;
}

.use-tailwind .border-b {
  border-bottom-width: 1px;
}

.use-tailwind .border-l {
  border-left-width: 1px;
}

.use-tailwind .border-r {
  border-right-width: 1px;
}

.use-tailwind .border-t {
  border-top-width: 1px;
}

.use-tailwind .border-border {
  border-color: hsl(var(--border));
}

.use-tailwind .border-destructive {
  border-color: hsl(var(--destructive));
}

.use-tailwind .border-destructive\/50 {
  border-color: hsl(var(--destructive) / 0.5);
}

.use-tailwind .border-input {
  border-color: hsl(var(--input));
}

.use-tailwind .border-primary {
  border-color: hsl(var(--primary));
}

.use-tailwind .border-primary\/50 {
  border-color: hsl(var(--primary) / 0.5);
}

.use-tailwind .border-transparent {
  border-color: transparent;
}

.use-tailwind .border-l-transparent {
  border-left-color: transparent;
}

.use-tailwind .border-t-transparent {
  border-top-color: transparent;
}

.use-tailwind .bg-accent {
  background-color: hsl(var(--accent));
}

.use-tailwind .bg-background {
  background-color: hsl(var(--background));
}

.use-tailwind .bg-background\/80 {
  background-color: hsl(var(--background) / 0.8);
}

.use-tailwind .bg-black\/80 {
  background-color: rgb(0 0 0 / 0.8);
}

.use-tailwind .bg-border {
  background-color: hsl(var(--border));
}

.use-tailwind .bg-card {
  background-color: hsl(var(--card));
}

.use-tailwind .bg-destructive {
  background-color: hsl(var(--destructive));
}

.use-tailwind .bg-destructive\/80 {
  background-color: hsl(var(--destructive) / 0.8);
}

.use-tailwind .bg-destructive\/90 {
  background-color: hsl(var(--destructive) / 0.9);
}

.use-tailwind .bg-muted {
  background-color: hsl(var(--muted));
}

.use-tailwind .bg-muted\/50 {
  background-color: hsl(var(--muted) / 0.5);
}

.use-tailwind .bg-popover {
  background-color: hsl(var(--popover));
}

.use-tailwind .bg-primary {
  background-color: hsl(var(--primary));
}

.use-tailwind .bg-primary\/10 {
  background-color: hsl(var(--primary) / 0.1);
}

.use-tailwind .bg-primary\/20 {
  background-color: hsl(var(--primary) / 0.2);
}

.use-tailwind .bg-primary\/80 {
  background-color: hsl(var(--primary) / 0.8);
}

.use-tailwind .bg-primary\/90 {
  background-color: hsl(var(--primary) / 0.9);
}

.use-tailwind .bg-secondary {
  background-color: hsl(var(--secondary));
}

.use-tailwind .bg-secondary\/80 {
  background-color: hsl(var(--secondary) / 0.8);
}

.use-tailwind .bg-transparent {
  background-color: transparent;
}

.use-tailwind .fill-current {
  fill: currentColor;
}

.use-tailwind .fill-primary {
  fill: hsl(var(--primary));
}

.use-tailwind .p-0 {
  padding: 0px;
}

.use-tailwind .p-1 {
  padding: 0.25rem;
}

.use-tailwind .p-2 {
  padding: 0.5rem;
}

.use-tailwind .p-3 {
  padding: 0.75rem;
}

.use-tailwind .p-4 {
  padding: 1rem;
}

.use-tailwind .p-6 {
  padding: 1.5rem;
}

.use-tailwind .p-\[1px\] {
  padding: 1px;
}

.use-tailwind .px-0 {
  padding-left: 0px;
  padding-right: 0px;
}

.use-tailwind .px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.use-tailwind .px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.use-tailwind .px-2\.5 {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}

.use-tailwind .px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.use-tailwind .px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.use-tailwind .px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}

.use-tailwind .py-0 {
  padding-top: 0px;
  padding-bottom: 0px;
}

.use-tailwind .py-0\.5 {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}

.use-tailwind .py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.use-tailwind .py-1\.5 {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}

.use-tailwind .py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.use-tailwind .py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.use-tailwind .py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.use-tailwind .py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.use-tailwind .pb-4 {
  padding-bottom: 1rem;
}

.use-tailwind .pl-2 {
  padding-left: 0.5rem;
}

.use-tailwind .pl-2\.5 {
  padding-left: 0.625rem;
}

.use-tailwind .pl-7 {
  padding-left: 1.75rem;
}

.use-tailwind .pl-8 {
  padding-left: 2rem;
}

.use-tailwind .pr-1 {
  padding-right: 0.25rem;
}

.use-tailwind .pr-2 {
  padding-right: 0.5rem;
}

.use-tailwind .pr-2\.5 {
  padding-right: 0.625rem;
}

.use-tailwind .pr-6 {
  padding-right: 1.5rem;
}

.use-tailwind .pr-8 {
  padding-right: 2rem;
}

.use-tailwind .pt-0 {
  padding-top: 0px;
}

.use-tailwind .pt-1 {
  padding-top: 0.25rem;
}

.use-tailwind .text-left {
  text-align: left;
}

.use-tailwind .text-center {
  text-align: center;
}

.use-tailwind .align-middle {
  vertical-align: middle;
}

.use-tailwind .text-\[0\.8rem\] {
  font-size: 0.8rem;
}

.use-tailwind .text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.use-tailwind .text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.use-tailwind .text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.use-tailwind .font-bold {
  font-weight: 700;
}

.use-tailwind .font-medium {
  font-weight: 500;
}

.use-tailwind .font-normal {
  font-weight: 400;
}

.use-tailwind .font-semibold {
  font-weight: 600;
}

.use-tailwind .leading-4 {
  line-height: 1rem;
}

.use-tailwind .leading-none {
  line-height: 1;
}

.use-tailwind .leading-snug {
  line-height: 1.375;
}

.use-tailwind .tracking-tight {
  letter-spacing: -0.025em;
}

.use-tailwind .tracking-widest {
  letter-spacing: 0.1em;
}

.use-tailwind .text-accent-foreground {
  color: hsl(var(--accent-foreground));
}

.use-tailwind .text-card-foreground {
  color: hsl(var(--card-foreground));
}

.use-tailwind .text-current {
  color: currentColor;
}

.use-tailwind .text-destructive {
  color: hsl(var(--destructive));
}

.use-tailwind .text-destructive-foreground {
  color: hsl(var(--destructive-foreground));
}

.use-tailwind .text-foreground {
  color: hsl(var(--foreground));
}

.use-tailwind .text-foreground\/50 {
  color: hsl(var(--foreground) / 0.5);
}

.use-tailwind .text-muted-foreground {
  color: hsl(var(--muted-foreground));
}

.use-tailwind .text-popover-foreground {
  color: hsl(var(--popover-foreground));
}

.use-tailwind .text-primary {
  color: hsl(var(--primary));
}

.use-tailwind .text-primary-foreground {
  color: hsl(var(--primary-foreground));
}

.use-tailwind .text-secondary-foreground {
  color: hsl(var(--secondary-foreground));
}

.use-tailwind .underline {
  text-decoration-line: underline;
}

.use-tailwind .no-underline {
  text-decoration-line: none;
}

.use-tailwind .underline-offset-4 {
  text-underline-offset: 4px;
}

.use-tailwind .antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.use-tailwind .opacity-0 {
  opacity: 0;
}

.use-tailwind .opacity-100 {
  opacity: 1;
}

.use-tailwind .opacity-50 {
  opacity: 0.5;
}

.use-tailwind .opacity-60 {
  opacity: 0.6;
}

.use-tailwind .opacity-70 {
  opacity: 0.7;
}

.use-tailwind .opacity-90 {
  opacity: 0.9;
}

.use-tailwind .shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.use-tailwind .shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.use-tailwind .shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.use-tailwind .shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.use-tailwind .outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.use-tailwind .outline {
  outline-style: solid;
}

.use-tailwind .ring {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.use-tailwind .ring-0 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.use-tailwind .ring-offset-2 {
  --tw-ring-offset-width: 2px;
}

.use-tailwind .ring-offset-background {
  --tw-ring-offset-color: hsl(var(--background));
}

.use-tailwind .ring-offset-red-600 {
  --tw-ring-offset-color: #dc2626;
}

.use-tailwind .filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.use-tailwind .backdrop-blur-sm {
  --tw-backdrop-blur: blur(4px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.use-tailwind .transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.use-tailwind .transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.use-tailwind .transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.use-tailwind .transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.use-tailwind .transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.use-tailwind .duration-200 {
  transition-duration: 200ms;
}

.use-tailwind .duration-300 {
  transition-duration: 300ms;
}

.use-tailwind .duration-500 {
  transition-duration: 500ms;
}

.use-tailwind .ease-in {
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.use-tailwind .ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.use-tailwind .ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}

.use-tailwind .animate-in {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}

.use-tailwind .fade-in {
  --tw-enter-opacity: 0;
}

.use-tailwind .fade-in-0 {
  --tw-enter-opacity: 0;
}

.use-tailwind .zoom-in-95 {
  --tw-enter-scale: .95;
}

.use-tailwind .slide-in-from-bottom {
  --tw-enter-translate-y: 100%;
}

.use-tailwind .slide-in-from-bottom-full {
  --tw-enter-translate-y: 100%;
}

.use-tailwind .slide-in-from-top {
  --tw-enter-translate-y: -100%;
}

.use-tailwind .duration-200 {
  animation-duration: 200ms;
}

.use-tailwind .duration-300 {
  animation-duration: 300ms;
}

.use-tailwind .duration-500 {
  animation-duration: 500ms;
}

.use-tailwind .ease-in {
  animation-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.use-tailwind .ease-in-out {
  animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.use-tailwind .ease-out {
  animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.use-tailwind .file\:border-0::file-selector-button {
  border-width: 0px;
}

.use-tailwind .file\:bg-transparent::file-selector-button {
  background-color: transparent;
}

.use-tailwind .file\:text-sm::file-selector-button {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.use-tailwind .file\:font-medium::file-selector-button {
  font-weight: 500;
}

.use-tailwind .placeholder\:text-muted-foreground::-moz-placeholder {
  color: hsl(var(--muted-foreground));
}

.use-tailwind .placeholder\:text-muted-foreground::placeholder {
  color: hsl(var(--muted-foreground));
}

.use-tailwind .after\:absolute::after {
  content: var(--tw-content);
  position: absolute;
}

.use-tailwind .after\:inset-y-0::after {
  content: var(--tw-content);
  top: 0px;
  bottom: 0px;
}

.use-tailwind .after\:left-1\/2::after {
  content: var(--tw-content);
  left: 50%;
}

.use-tailwind .after\:w-1::after {
  content: var(--tw-content);
  width: 0.25rem;
}

.use-tailwind .after\:-translate-x-1\/2::after {
  content: var(--tw-content);
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .focus-within\:relative:focus-within {
  position: relative;
}

.use-tailwind .focus-within\:z-20:focus-within {
  z-index: 20;
}

.use-tailwind .hover\:bg-accent:hover {
  background-color: hsl(var(--accent));
}

.use-tailwind .hover\:bg-destructive\/80:hover {
  background-color: hsl(var(--destructive) / 0.8);
}

.use-tailwind .hover\:bg-destructive\/90:hover {
  background-color: hsl(var(--destructive) / 0.9);
}

.use-tailwind .hover\:bg-muted:hover {
  background-color: hsl(var(--muted));
}

.use-tailwind .hover\:bg-muted\/50:hover {
  background-color: hsl(var(--muted) / 0.5);
}

.use-tailwind .hover\:bg-primary:hover {
  background-color: hsl(var(--primary));
}

.use-tailwind .hover\:bg-primary\/80:hover {
  background-color: hsl(var(--primary) / 0.8);
}

.use-tailwind .hover\:bg-primary\/90:hover {
  background-color: hsl(var(--primary) / 0.9);
}

.use-tailwind .hover\:bg-secondary:hover {
  background-color: hsl(var(--secondary));
}

.use-tailwind .hover\:bg-secondary\/80:hover {
  background-color: hsl(var(--secondary) / 0.8);
}

.use-tailwind .hover\:text-accent-foreground:hover {
  color: hsl(var(--accent-foreground));
}

.use-tailwind .hover\:text-foreground:hover {
  color: hsl(var(--foreground));
}

.use-tailwind .hover\:text-muted-foreground:hover {
  color: hsl(var(--muted-foreground));
}

.use-tailwind .hover\:text-primary-foreground:hover {
  color: hsl(var(--primary-foreground));
}

.use-tailwind .hover\:underline:hover {
  text-decoration-line: underline;
}

.use-tailwind .hover\:opacity-100:hover {
  opacity: 1;
}

.use-tailwind .hover\:opacity-70:hover {
  opacity: 0.7;
}

.use-tailwind .focus\:bg-accent:focus {
  background-color: hsl(var(--accent));
}

.use-tailwind .focus\:bg-primary:focus {
  background-color: hsl(var(--primary));
}

.use-tailwind .focus\:text-accent-foreground:focus {
  color: hsl(var(--accent-foreground));
}

.use-tailwind .focus\:text-primary-foreground:focus {
  color: hsl(var(--primary-foreground));
}

.use-tailwind .focus\:opacity-100:focus {
  opacity: 1;
}

.use-tailwind .focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.use-tailwind .focus\:ring-1:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.use-tailwind .focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.use-tailwind .focus\:ring-ring:focus {
  --tw-ring-color: hsl(var(--ring));
}

.use-tailwind .focus\:ring-offset-2:focus {
  --tw-ring-offset-width: 2px;
}

.use-tailwind .focus-visible\:outline-none:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.use-tailwind .focus-visible\:ring-1:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.use-tailwind .focus-visible\:ring-2:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.use-tailwind .focus-visible\:ring-ring:focus-visible {
  --tw-ring-color: hsl(var(--ring));
}

.use-tailwind .focus-visible\:ring-offset-1:focus-visible {
  --tw-ring-offset-width: 1px;
}

.use-tailwind .focus-visible\:ring-offset-2:focus-visible {
  --tw-ring-offset-width: 2px;
}

.use-tailwind .focus-visible\:ring-offset-background:focus-visible {
  --tw-ring-offset-color: hsl(var(--background));
}

.use-tailwind .disabled\:pointer-events-none:disabled {
  pointer-events: none;
}

.use-tailwind .disabled\:cursor-not-allowed:disabled {
  cursor: not-allowed;
}

.use-tailwind .disabled\:opacity-50:disabled {
  opacity: 0.5;
}

.use-tailwind .group\/multi-select-badge:hover .group-hover\/multi-select-badge\:text-foreground {
  color: hsl(var(--foreground));
}

.use-tailwind .group:hover .group-hover\:opacity-100 {
  opacity: 1;
}

.use-tailwind .group.destructive .group-\[\.destructive\]\:border-muted\/40 {
  border-color: hsl(var(--muted) / 0.4);
}

.use-tailwind .group.toaster .group-\[\.toaster\]\:border-border {
  border-color: hsl(var(--border));
}

.use-tailwind .group.toast .group-\[\.toast\]\:bg-primary {
  background-color: hsl(var(--primary));
}

.use-tailwind .group.toaster .group-\[\.toaster\]\:bg-background {
  background-color: hsl(var(--background));
}

.use-tailwind .group.toaster .group-\[\.toaster\]\:bg-muted {
  background-color: hsl(var(--muted));
}

.use-tailwind .group.destructive .group-\[\.destructive\]\:text-red-300 {
  --tw-text-opacity: 1;
  color: rgb(252 165 165 / var(--tw-text-opacity));
}

.use-tailwind .group.toast .group-\[\.toast\]\:text-muted-foreground {
  color: hsl(var(--muted-foreground));
}

.use-tailwind .group.toast .group-\[\.toast\]\:text-primary-foreground {
  color: hsl(var(--primary-foreground));
}

.use-tailwind .group.toaster .group-\[\.toaster\]\:text-foreground {
  color: hsl(var(--foreground));
}

.use-tailwind .group.toaster .group-\[\.toaster\]\:text-muted-foreground {
  color: hsl(var(--muted-foreground));
}

.use-tailwind .group.toaster .group-\[\.toaster\]\:shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.use-tailwind .group.destructive .group-\[\.destructive\]\:hover\:border-destructive\/30:hover {
  border-color: hsl(var(--destructive) / 0.3);
}

.use-tailwind .group.destructive .group-\[\.destructive\]\:hover\:bg-destructive:hover {
  background-color: hsl(var(--destructive));
}

.use-tailwind .group.destructive .group-\[\.destructive\]\:hover\:text-destructive-foreground:hover {
  color: hsl(var(--destructive-foreground));
}

.use-tailwind .group.destructive .group-\[\.destructive\]\:hover\:text-red-50:hover {
  --tw-text-opacity: 1;
  color: rgb(254 242 242 / var(--tw-text-opacity));
}

.use-tailwind .group.toaster .group-\[\.toaster\]\:hover\:text-background:hover {
  color: hsl(var(--background));
}

.use-tailwind .group.destructive .group-\[\.destructive\]\:focus\:ring-destructive:focus {
  --tw-ring-color: hsl(var(--destructive));
}

.use-tailwind .group.destructive .group-\[\.destructive\]\:focus\:ring-red-400:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(248 113 113 / var(--tw-ring-opacity));
}

.use-tailwind .group.destructive .group-\[\.destructive\]\:focus\:ring-offset-red-600:focus {
  --tw-ring-offset-color: #dc2626;
}

.use-tailwind .peer:disabled ~ .peer-disabled\:cursor-not-allowed {
  cursor: not-allowed;
}

.use-tailwind .peer:disabled ~ .peer-disabled\:opacity-70 {
  opacity: 0.7;
}

.use-tailwind .aria-selected\:bg-accent[aria-selected="true"] {
  background-color: hsl(var(--accent));
}

.use-tailwind .aria-selected\:bg-accent\/50[aria-selected="true"] {
  background-color: hsl(var(--accent) / 0.5);
}

.use-tailwind .aria-selected\:text-accent-foreground[aria-selected="true"] {
  color: hsl(var(--accent-foreground));
}

.use-tailwind .aria-selected\:text-muted-foreground[aria-selected="true"] {
  color: hsl(var(--muted-foreground));
}

.use-tailwind .aria-selected\:opacity-100[aria-selected="true"] {
  opacity: 1;
}

.use-tailwind .aria-selected\:opacity-30[aria-selected="true"] {
  opacity: 0.3;
}

.use-tailwind .data-\[disabled\=true\]\:pointer-events-none[data-disabled=true] {
  pointer-events: none;
}

.use-tailwind .data-\[disabled\]\:pointer-events-none[data-disabled] {
  pointer-events: none;
}

.use-tailwind .data-\[panel-group-direction\=vertical\]\:h-px[data-panel-group-direction=vertical] {
  height: 1px;
}

.use-tailwind .data-\[panel-group-direction\=vertical\]\:w-full[data-panel-group-direction=vertical] {
  width: 100%;
}

.use-tailwind .data-\[side\=bottom\]\:translate-y-1[data-side=bottom] {
  --tw-translate-y: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .data-\[side\=left\]\:-translate-x-1[data-side=left] {
  --tw-translate-x: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .data-\[side\=right\]\:translate-x-1[data-side=right] {
  --tw-translate-x: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .data-\[side\=top\]\:-translate-y-1[data-side=top] {
  --tw-translate-y: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .data-\[state\=checked\]\:translate-x-4[data-state=checked] {
  --tw-translate-x: 1rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .data-\[state\=unchecked\]\:translate-x-0[data-state=unchecked] {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .data-\[swipe\=cancel\]\:translate-x-0[data-swipe=cancel] {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .data-\[swipe\=end\]\:translate-x-\[var\(--radix-toast-swipe-end-x\)\][data-swipe=end] {
  --tw-translate-x: var(--radix-toast-swipe-end-x);
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .data-\[swipe\=move\]\:translate-x-\[var\(--radix-toast-swipe-move-x\)\][data-swipe=move] {
  --tw-translate-x: var(--radix-toast-swipe-move-x);
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes accordion-up {
  from {
    height: var(--radix-accordion-content-height);
  }

  to {
    height: 0;
  }
}

.use-tailwind .data-\[state\=closed\]\:animate-accordion-up[data-state=closed] {
  animation: accordion-up 0.2s ease-out;
}

@keyframes accordion-down {
  from {
    height: 0;
  }

  to {
    height: var(--radix-accordion-content-height);
  }
}

.use-tailwind .data-\[state\=open\]\:animate-accordion-down[data-state=open] {
  animation: accordion-down 0.2s ease-out;
}

.use-tailwind .data-\[panel-group-direction\=vertical\]\:flex-col[data-panel-group-direction=vertical] {
  flex-direction: column;
}

.use-tailwind .data-\[active\]\:bg-accent\/50[data-active] {
  background-color: hsl(var(--accent) / 0.5);
}

.use-tailwind .data-\[state\=active\]\:bg-background[data-state=active] {
  background-color: hsl(var(--background));
}

.use-tailwind .data-\[state\=checked\]\:bg-primary[data-state=checked] {
  background-color: hsl(var(--primary));
}

.use-tailwind .data-\[state\=on\]\:bg-accent[data-state=on] {
  background-color: hsl(var(--accent));
}

.use-tailwind .data-\[state\=open\]\:bg-accent[data-state=open] {
  background-color: hsl(var(--accent));
}

.use-tailwind .data-\[state\=open\]\:bg-accent\/50[data-state=open] {
  background-color: hsl(var(--accent) / 0.5);
}

.use-tailwind .data-\[state\=open\]\:bg-secondary[data-state=open] {
  background-color: hsl(var(--secondary));
}

.use-tailwind .data-\[state\=selected\]\:bg-muted[data-state=selected] {
  background-color: hsl(var(--muted));
}

.use-tailwind .data-\[state\=unchecked\]\:bg-input[data-state=unchecked] {
  background-color: hsl(var(--input));
}

.use-tailwind .data-\[state\=active\]\:text-foreground[data-state=active] {
  color: hsl(var(--foreground));
}

.use-tailwind .data-\[state\=checked\]\:text-primary-foreground[data-state=checked] {
  color: hsl(var(--primary-foreground));
}

.use-tailwind .data-\[state\=on\]\:text-accent-foreground[data-state=on] {
  color: hsl(var(--accent-foreground));
}

.use-tailwind .data-\[state\=open\]\:text-accent-foreground[data-state=open] {
  color: hsl(var(--accent-foreground));
}

.use-tailwind .data-\[state\=open\]\:text-muted-foreground[data-state=open] {
  color: hsl(var(--muted-foreground));
}

.use-tailwind .data-\[disabled\=true\]\:opacity-50[data-disabled=true] {
  opacity: 0.5;
}

.use-tailwind .data-\[disabled\]\:opacity-50[data-disabled] {
  opacity: 0.5;
}

.use-tailwind .data-\[state\=active\]\:shadow[data-state=active] {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.use-tailwind .data-\[swipe\=move\]\:transition-none[data-swipe=move] {
  transition-property: none;
}

.use-tailwind .data-\[state\=closed\]\:duration-300[data-state=closed] {
  transition-duration: 300ms;
}

.use-tailwind .data-\[state\=open\]\:duration-500[data-state=open] {
  transition-duration: 500ms;
}

.use-tailwind .data-\[motion\^\=from-\]\:animate-in[data-motion^=from-] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}

.use-tailwind .data-\[state\=open\]\:animate-in[data-state=open] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}

.use-tailwind .data-\[state\=visible\]\:animate-in[data-state=visible] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}

.use-tailwind .data-\[motion\^\=to-\]\:animate-out[data-motion^=to-] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}

.use-tailwind .data-\[state\=closed\]\:animate-out[data-state=closed] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}

.use-tailwind .data-\[state\=hidden\]\:animate-out[data-state=hidden] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}

.use-tailwind .data-\[swipe\=end\]\:animate-out[data-swipe=end] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}

.use-tailwind .data-\[motion\^\=from-\]\:fade-in[data-motion^=from-] {
  --tw-enter-opacity: 0;
}

.use-tailwind .data-\[motion\^\=to-\]\:fade-out[data-motion^=to-] {
  --tw-exit-opacity: 0;
}

.use-tailwind .data-\[state\=closed\]\:fade-out-0[data-state=closed] {
  --tw-exit-opacity: 0;
}

.use-tailwind .data-\[state\=closed\]\:fade-out-80[data-state=closed] {
  --tw-exit-opacity: 0.8;
}

.use-tailwind .data-\[state\=hidden\]\:fade-out[data-state=hidden] {
  --tw-exit-opacity: 0;
}

.use-tailwind .data-\[state\=open\]\:fade-in-0[data-state=open] {
  --tw-enter-opacity: 0;
}

.use-tailwind .data-\[state\=visible\]\:fade-in[data-state=visible] {
  --tw-enter-opacity: 0;
}

.use-tailwind .data-\[state\=closed\]\:zoom-out-95[data-state=closed] {
  --tw-exit-scale: .95;
}

.use-tailwind .data-\[state\=open\]\:zoom-in-90[data-state=open] {
  --tw-enter-scale: .9;
}

.use-tailwind .data-\[state\=open\]\:zoom-in-95[data-state=open] {
  --tw-enter-scale: .95;
}

.use-tailwind .data-\[motion\=from-end\]\:slide-in-from-right-52[data-motion=from-end] {
  --tw-enter-translate-x: 13rem;
}

.use-tailwind .data-\[motion\=from-start\]\:slide-in-from-left-52[data-motion=from-start] {
  --tw-enter-translate-x: -13rem;
}

.use-tailwind .data-\[motion\=to-end\]\:slide-out-to-right-52[data-motion=to-end] {
  --tw-exit-translate-x: 13rem;
}

.use-tailwind .data-\[motion\=to-start\]\:slide-out-to-left-52[data-motion=to-start] {
  --tw-exit-translate-x: -13rem;
}

.use-tailwind .data-\[side\=bottom\]\:slide-in-from-top-2[data-side=bottom] {
  --tw-enter-translate-y: -0.5rem;
}

.use-tailwind .data-\[side\=left\]\:slide-in-from-right-2[data-side=left] {
  --tw-enter-translate-x: 0.5rem;
}

.use-tailwind .data-\[side\=right\]\:slide-in-from-left-2[data-side=right] {
  --tw-enter-translate-x: -0.5rem;
}

.use-tailwind .data-\[side\=top\]\:slide-in-from-bottom-2[data-side=top] {
  --tw-enter-translate-y: 0.5rem;
}

.use-tailwind .data-\[state\=closed\]\:slide-out-to-bottom[data-state=closed] {
  --tw-exit-translate-y: 100%;
}

.use-tailwind .data-\[state\=closed\]\:slide-out-to-left[data-state=closed] {
  --tw-exit-translate-x: -100%;
}

.use-tailwind .data-\[state\=closed\]\:slide-out-to-left-1\/2[data-state=closed] {
  --tw-exit-translate-x: -50%;
}

.use-tailwind .data-\[state\=closed\]\:slide-out-to-right[data-state=closed] {
  --tw-exit-translate-x: 100%;
}

.use-tailwind .data-\[state\=closed\]\:slide-out-to-right-full[data-state=closed] {
  --tw-exit-translate-x: 100%;
}

.use-tailwind .data-\[state\=closed\]\:slide-out-to-top[data-state=closed] {
  --tw-exit-translate-y: -100%;
}

.use-tailwind .data-\[state\=closed\]\:slide-out-to-top-\[48\%\][data-state=closed] {
  --tw-exit-translate-y: -48%;
}

.use-tailwind .data-\[state\=open\]\:slide-in-from-bottom[data-state=open] {
  --tw-enter-translate-y: 100%;
}

.use-tailwind .data-\[state\=open\]\:slide-in-from-left[data-state=open] {
  --tw-enter-translate-x: -100%;
}

.use-tailwind .data-\[state\=open\]\:slide-in-from-left-1\/2[data-state=open] {
  --tw-enter-translate-x: -50%;
}

.use-tailwind .data-\[state\=open\]\:slide-in-from-right[data-state=open] {
  --tw-enter-translate-x: 100%;
}

.use-tailwind .data-\[state\=open\]\:slide-in-from-top[data-state=open] {
  --tw-enter-translate-y: -100%;
}

.use-tailwind .data-\[state\=open\]\:slide-in-from-top-\[48\%\][data-state=open] {
  --tw-enter-translate-y: -48%;
}

.use-tailwind .data-\[state\=open\]\:slide-in-from-top-full[data-state=open] {
  --tw-enter-translate-y: -100%;
}

.use-tailwind .data-\[state\=closed\]\:duration-300[data-state=closed] {
  animation-duration: 300ms;
}

.use-tailwind .data-\[state\=open\]\:duration-500[data-state=open] {
  animation-duration: 500ms;
}

.use-tailwind .data-\[panel-group-direction\=vertical\]\:after\:left-0[data-panel-group-direction=vertical]::after {
  content: var(--tw-content);
  left: 0px;
}

.use-tailwind .data-\[panel-group-direction\=vertical\]\:after\:h-1[data-panel-group-direction=vertical]::after {
  content: var(--tw-content);
  height: 0.25rem;
}

.use-tailwind .data-\[panel-group-direction\=vertical\]\:after\:w-full[data-panel-group-direction=vertical]::after {
  content: var(--tw-content);
  width: 100%;
}

.use-tailwind .data-\[panel-group-direction\=vertical\]\:after\:-translate-y-1\/2[data-panel-group-direction=vertical]::after {
  content: var(--tw-content);
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .data-\[panel-group-direction\=vertical\]\:after\:translate-x-0[data-panel-group-direction=vertical]::after {
  content: var(--tw-content);
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .data-\[state\=inactive\]\:hover\:brightness-50:hover[data-state=inactive] {
  --tw-brightness: brightness(.5);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.use-tailwind .group[data-state=open] .group-data-\[state\=open\]\:rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .dark\:-rotate-90:is(.theme-mode-dark *) {
  --tw-rotate: -90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .dark\:rotate-0:is(.theme-mode-dark *) {
  --tw-rotate: 0deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .dark\:scale-0:is(.theme-mode-dark *) {
  --tw-scale-x: 0;
  --tw-scale-y: 0;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .dark\:scale-100:is(.theme-mode-dark *) {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .dark\:border-destructive:is(.theme-mode-dark *) {
  border-color: hsl(var(--destructive));
}

.use-tailwind .data-\[state\=inactive\]\:dark\:hover\:brightness-150:hover:is(.theme-mode-dark *)[data-state=inactive] {
  --tw-brightness: brightness(1.5);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

@media (min-width: 640px) {
  .use-tailwind .sm\:bottom-0 {
    bottom: 0px;
  }

  .use-tailwind .sm\:right-0 {
    right: 0px;
  }

  .use-tailwind .sm\:top-auto {
    top: auto;
  }

  .use-tailwind .sm\:mt-0 {
    margin-top: 0px;
  }

  .use-tailwind .sm\:block {
    display: block;
  }

  .use-tailwind .sm\:hidden {
    display: none;
  }

  .use-tailwind .sm\:max-w-sm {
    max-width: 24rem;
  }

  .use-tailwind .sm\:flex-row {
    flex-direction: row;
  }

  .use-tailwind .sm\:flex-col {
    flex-direction: column;
  }

  .use-tailwind .sm\:justify-end {
    justify-content: flex-end;
  }

  .use-tailwind .sm\:gap-2 {
    gap: 0.5rem;
  }

  .use-tailwind .sm\:gap-2\.5 {
    gap: 0.625rem;
  }

  .use-tailwind .sm\:space-x-2 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0.5rem * var(--tw-space-x-reverse));
    margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .use-tailwind .sm\:space-x-4 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(1rem * var(--tw-space-x-reverse));
    margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .use-tailwind .sm\:space-y-0 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0px * var(--tw-space-y-reverse));
  }

  .use-tailwind .sm\:rounded-lg {
    border-radius: var(--radius);
  }

  .use-tailwind .sm\:text-left {
    text-align: left;
  }

  .use-tailwind .data-\[state\=open\]\:sm\:slide-in-from-bottom-full[data-state=open] {
    --tw-enter-translate-y: 100%;
  }
}

@media (min-width: 768px) {
  .use-tailwind .md\:absolute {
    position: absolute;
  }

  .use-tailwind .md\:flex {
    display: flex;
  }

  .use-tailwind .md\:hidden {
    display: none;
  }

  .use-tailwind .md\:w-\[var\(--radix-navigation-menu-viewport-width\)\] {
    width: var(--radix-navigation-menu-viewport-width);
  }

  .use-tailwind .md\:w-auto {
    width: auto;
  }

  .use-tailwind .md\:max-w-\[420px\] {
    max-width: 420px;
  }

  .use-tailwind .md\:px-4 {
    padding-left: 1rem;
    padding-right: 1rem;
  }
}

.use-tailwind .\[\&\+div\]\:text-xs+div {
  font-size: 0.75rem;
  line-height: 1rem;
}

.use-tailwind .\[\&\:has\(\>\.day-range-end\)\]\:rounded-r-md:has(>.day-range-end) {
  border-top-right-radius: calc(var(--radius) - 2px);
  border-bottom-right-radius: calc(var(--radius) - 2px);
}

.use-tailwind .\[\&\:has\(\>\.day-range-start\)\]\:rounded-l-md:has(>.day-range-start) {
  border-top-left-radius: calc(var(--radius) - 2px);
  border-bottom-left-radius: calc(var(--radius) - 2px);
}

.use-tailwind .\[\&\:has\(\[aria-selected\]\)\]\:rounded-md:has([aria-selected]) {
  border-radius: calc(var(--radius) - 2px);
}

.use-tailwind .\[\&\:has\(\[aria-selected\]\)\]\:bg-accent:has([aria-selected]) {
  background-color: hsl(var(--accent));
}

.use-tailwind .first\:\[\&\:has\(\[aria-selected\]\)\]\:rounded-l-md:has([aria-selected]):first-child {
  border-top-left-radius: calc(var(--radius) - 2px);
  border-bottom-left-radius: calc(var(--radius) - 2px);
}

.use-tailwind .last\:\[\&\:has\(\[aria-selected\]\)\]\:rounded-r-md:has([aria-selected]):last-child {
  border-top-right-radius: calc(var(--radius) - 2px);
  border-bottom-right-radius: calc(var(--radius) - 2px);
}

.use-tailwind .\[\&\:has\(\[aria-selected\]\.day-outside\)\]\:bg-accent\/50:has([aria-selected].day-outside) {
  background-color: hsl(var(--accent) / 0.5);
}

.use-tailwind .\[\&\:has\(\[aria-selected\]\.day-range-end\)\]\:rounded-r-md:has([aria-selected].day-range-end) {
  border-top-right-radius: calc(var(--radius) - 2px);
  border-bottom-right-radius: calc(var(--radius) - 2px);
}

.use-tailwind .\[\&\:has\(\[role\=checkbox\]\)\]\:pr-0:has([role=checkbox]) {
  padding-right: 0px;
}

.use-tailwind .\[\&\>\[role\=checkbox\]\]\:translate-y-\[2px\]>[role=checkbox] {
  --tw-translate-y: 2px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .\[\&\>span\]\:line-clamp-1>span {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
}

.use-tailwind .\[\&\>svg\+div\]\:translate-y-\[-3px\]>svg+div {
  --tw-translate-y: -3px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .\[\&\>svg\]\:absolute>svg {
  position: absolute;
}

.use-tailwind .\[\&\>svg\]\:left-4>svg {
  left: 1rem;
}

.use-tailwind .\[\&\>svg\]\:top-4>svg {
  top: 1rem;
}

.use-tailwind .\[\&\>svg\]\:size-3\.5>svg {
  width: 0.875rem;
  height: 0.875rem;
}

.use-tailwind .\[\&\>svg\]\:text-destructive>svg {
  color: hsl(var(--destructive));
}

.use-tailwind .\[\&\>svg\]\:text-foreground>svg {
  color: hsl(var(--foreground));
}

.use-tailwind .\[\&\>svg\~\*\]\:pl-7>svg~* {
  padding-left: 1.75rem;
}

.use-tailwind .\[\&\>tr\]\:last\:border-b-0:last-child>tr {
  border-bottom-width: 0px;
}

.use-tailwind .\[\&\[data-panel-group-direction\=vertical\]\>div\]\:rotate-90[data-panel-group-direction=vertical]>div {
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .\[\&\[data-state\=open\]\>svg\]\:rotate-180[data-state=open]>svg {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.use-tailwind .\[\&_\[cmdk-group-heading\]\]\:px-2 [cmdk-group-heading] {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.use-tailwind .\[\&_\[cmdk-group-heading\]\]\:py-1\.5 [cmdk-group-heading] {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}

.use-tailwind .\[\&_\[cmdk-group-heading\]\]\:text-xs [cmdk-group-heading] {
  font-size: 0.75rem;
  line-height: 1rem;
}

.use-tailwind .\[\&_\[cmdk-group-heading\]\]\:font-medium [cmdk-group-heading] {
  font-weight: 500;
}

.use-tailwind .\[\&_\[cmdk-group-heading\]\]\:text-muted-foreground [cmdk-group-heading] {
  color: hsl(var(--muted-foreground));
}

.use-tailwind .\[\&_\[cmdk-group\]\:not\(\[hidden\]\)_\~\[cmdk-group\]\]\:pt-0 [cmdk-group]:not([hidden]) ~[cmdk-group] {
  padding-top: 0px;
}

.use-tailwind .\[\&_\[cmdk-group\]\]\:px-2 [cmdk-group] {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.use-tailwind .\[\&_\[cmdk-input-wrapper\]_svg\]\:h-5 [cmdk-input-wrapper] svg {
  height: 1.25rem;
}

.use-tailwind .\[\&_\[cmdk-input-wrapper\]_svg\]\:w-5 [cmdk-input-wrapper] svg {
  width: 1.25rem;
}

.use-tailwind .\[\&_\[cmdk-input\]\]\:h-12 [cmdk-input] {
  height: 3rem;
}

.use-tailwind .\[\&_\[cmdk-item\]\]\:px-2 [cmdk-item] {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.use-tailwind .\[\&_\[cmdk-item\]\]\:py-3 [cmdk-item] {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.use-tailwind .\[\&_\[cmdk-item\]_svg\]\:h-5 [cmdk-item] svg {
  height: 1.25rem;
}

.use-tailwind .\[\&_\[cmdk-item\]_svg\]\:w-5 [cmdk-item] svg {
  width: 1.25rem;
}

.use-tailwind .\[\&_p\]\:leading-relaxed p {
  line-height: 1.625;
}

.use-tailwind .\[\&_tr\:last-child\]\:border-0 tr:last-child {
  border-width: 0px;
}

.use-tailwind .\[\&_tr\]\:border-b tr {
  border-bottom-width: 1px;
}
